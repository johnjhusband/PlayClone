name: Nightly Tests

on:
  schedule:
    # Run at 2 AM UTC every day
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - unit
          - integration
          - self-test
          - ai-assistant
          - performance
          - stress
          - cross-browser

jobs:
  nightly-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install all Playwright browsers
      run: npx playwright install --with-deps chromium firefox webkit
    
    - name: Build
      run: npm run build
    
    - name: Run unit tests
      if: ${{ github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'unit' }}
      run: npm test
      continue-on-error: true
    
    - name: Run self-tests
      if: ${{ github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'self-test' }}
      run: npm run test:self
      continue-on-error: true
    
    - name: Run integration tests
      if: ${{ github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'integration' }}
      run: npm run test:integration
      continue-on-error: true
    
    - name: Run AI assistant tests
      if: ${{ github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'ai-assistant' }}
      run: |
        node tests/ai-assistant-tests.js
        node demo-ai-assistant.js
      continue-on-error: true
      timeout-minutes: 20
    
    - name: Run performance tests
      if: ${{ github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'performance' }}
      run: |
        npm run perf:baseline
        npm run perf:regression
        node tests/performance/memory-profiler-simple.js
      continue-on-error: true
      timeout-minutes: 15
    
    - name: Run stress tests
      if: ${{ github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'stress' }}
      run: |
        node tests/stress/stress-test-suite.js
        node tests/stress/concurrent-operations-test.js
      continue-on-error: true
      timeout-minutes: 30
    
    - name: Run cross-browser compatibility tests
      if: ${{ github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'cross-browser' }}
      run: |
        node tests/cross-browser-compatibility.js
        node tests/cross-browser-matrix-test.js
      continue-on-error: true
      timeout-minutes: 20
    
    - name: Generate test report
      if: always()
      run: |
        echo "# Nightly Test Report - $(date)" > nightly-report.md
        echo "## Test Suite: ${{ github.event.inputs.test_suite || 'all' }}" >> nightly-report.md
        echo "## Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> nightly-report.md
        echo "## Node Version: $(node --version)" >> nightly-report.md
        echo "## NPM Version: $(npm --version)" >> nightly-report.md
        echo "---" >> nightly-report.md
        
        # Add test results summary if available
        if [ -f "test-results/summary.json" ]; then
          echo "## Test Results Summary" >> nightly-report.md
          cat test-results/summary.json | jq -r '.[] | "- \(.name): \(.status)"' >> nightly-report.md
        fi
    
    - name: Upload nightly test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: nightly-test-results-${{ github.run_number }}
        path: |
          nightly-report.md
          test-results/
          tests/performance/results/
          coverage/
        retention-days: 90
    
    - name: Create issue on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const title = `Nightly Test Failure - ${new Date().toISOString().split('T')[0]}`;
          const body = `## Nightly tests failed
          
          **Date**: ${new Date().toISOString()}
          **Test Suite**: ${{ github.event.inputs.test_suite || 'all' }}
          **Run**: [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          
          Please investigate the failures and fix any issues found.
          
          ### Action Items
          - [ ] Review test logs
          - [ ] Identify root cause
          - [ ] Create fix PR
          - [ ] Verify fix in next nightly run
          `;
          
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['bug', 'nightly-failure', 'automated']
          });
    
    - name: Send Slack notification
      if: failure()
      uses: slackapi/slack-github-action@v1
      with:
        payload: |
          {
            "text": "Nightly tests failed for PlayClone",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*Nightly Test Failure* :warning:\n*Repository:* ${{ github.repository }}\n*Test Suite:* ${{ github.event.inputs.test_suite || 'all' }}\n*Run:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|#${{ github.run_number }}>"
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      continue-on-error: true